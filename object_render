import React, { useState, useEffect, useRef } from 'react';
import ReactPlayer from 'react-player';
import axios from 'axios';

const VideoPlayerWithOverlay = () => {
  const [videoData, setVideoData] = useState([]);
  const [currentTimestamp, setCurrentTimestamp] = useState(0);
  const [currentObjects, setCurrentObjects] = useState([]);
  const playerRef = useRef(null);

  // Fetch the JSON data
  useEffect(() => {
    const fetchData = async () => {
      const response = await axios.get('URL_TO_YOUR_JSON_FILE');
      setVideoData(response.data);
    };

    fetchData();
  }, []);

  // Update current objects based on the timestamp
  useEffect(() => {
    const objectsAtTimestamp = videoData.filter(
      item => Math.floor(item.Timestamp / 1000) === Math.floor(currentTimestamp)
    );
    setCurrentObjects(objectsAtTimestamp);
  }, [currentTimestamp, videoData]);

  const handleProgress = state => {
    setCurrentTimestamp(state.playedSeconds);
  };

  return (
    <div style={{ position: 'relative', width: '800px', height: '450px' }}>
      <ReactPlayer
        ref={playerRef}
        url="URL_TO_YOUR_VIDEO_FILE"
        controls
        playing
        onProgress={handleProgress}
        width="100%"
        height="100%"
      />
      <div style={{ position: 'absolute', top: '10px', right: '10px', color: 'white' }}>
        {currentObjects.map((item, index) => (
          <div key={index}>
            {item.Object} ({item.Confidence.toFixed(2)}%)
          </div>
        ))}
      </div>
    </div>
  );
};

export default VideoPlayerWithOverlay;