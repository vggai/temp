import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.Collections;

public class LambdaAuthorizerTest {

    @Test
    public void testAuthorizedRequest() {
        LambdaAuthorizer authorizer = new LambdaAuthorizer();
        APIGatewayProxyRequestEvent requestEvent = new APIGatewayProxyRequestEvent();
        requestEvent.setHeaders(Collections.singletonMap("Authorization", "expectedAuthTokenValue"));

        APIGatewayProxyResponseEvent responseEvent = authorizer.handleRequest(requestEvent, null);
        
        Assertions.assertEquals(200, responseEvent.getStatusCode());
        Assertions.assertTrue(responseEvent.getBody().contains("\"Effect\":\"Allow\""));
    }

    @Test
    public void testUnauthorizedRequest() {
        LambdaAuthorizer authorizer = new LambdaAuthorizer();
        APIGatewayProxyRequestEvent requestEvent = new APIGatewayProxyRequestEvent();
        requestEvent.setHeaders(Collections.singletonMap("Authorization", "wrongAuthTokenValue"));

        APIGatewayProxyResponseEvent responseEvent = authorizer.handleRequest(requestEvent, null);

        Assertions.assertEquals(403, responseEvent.getStatusCode());
        Assertions.assertEquals("Unauthorized", responseEvent.getBody());
    }
}